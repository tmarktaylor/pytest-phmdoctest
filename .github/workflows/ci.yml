name: CI

# Notes:
# - The venv_tests job installs pytest-phmdoctest in a virtual environment.
# - The coverage job installs pytest-phmdoctest in develop mode.
# - The inspect job does not install pytest-phmdoctest.
on:
  push:
  pull_request:
    branches: [develop]

jobs:
  venv_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Windows Venv
      run: |
        python -m venv ${{ github.workspace }}\env
        ${{ github.workspace }}\env\Scripts\Activate.ps1
        python -m pip --version
      if: startswith(runner.os, 'Windows')
    - name: Linux/macOS Venv
      run: |
        python -m venv ${{ github.workspace }}/env
        source ${{ github.workspace }}/env/bin/activate
        python -m pip --version
      if: startswith(runner.os, 'Linux') || startswith(runner.os, 'macOS')
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --no-deps "."
        python -m pip install -r requirements.txt
        python -m pip install -r tests/requirements.txt
    - name: Tests
      run: |
        pytest -v tests

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      id: setuppython
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        python -m pip install --no-deps --editable "."
        pip install -r requirements.txt
        pip install -r tests/requirements.txt
        pip freeze
    - name: Tests, coverage report
      run: |
        coverage run --branch --source=src -m pytest -v tests
        coverage report --show-missing
        coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      if: success() && ((github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/develop'))
      continue-on-error: true
      with:
        file: coverage.xml
        flags: pytest,python-${{ steps.setuppython.outputs.python-version }},ubuntu-latest
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  inspect:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements_inspect.txt
        python -m pip install trove-classifiers
        pip freeze
    - name: Formating
      # Show reformatting changes.
      # Make the changes.
      # Subsequent steps run with the modified files.
      run: |
        black --diff --color "."
        black "."
      continue-on-error: true
    - name: Code Style
      run: |
        flake8 --exit-zero --max-complexity=10
    - name: Deployable
      run: |
        python tests/check_classifiers.py
        check-manifest -v
        python setup.py sdist
        twine check dist/*

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        # This should be the same as in .readthedocs.yml
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r doc/requirements.txt
        pip freeze
    - name: Sphinx build
      run: |
        mkdir docbuild
        sphinx-build -b html -d docbuild/doctrees . docbuild/html
    - name: Upload docs
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docbuild/html
        retention-days: 5
